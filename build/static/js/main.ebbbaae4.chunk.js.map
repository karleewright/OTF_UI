{"version":3,"sources":["Components/Modal/ModalPage.js","Components/Modal/EditModalPage.js","Components/StatsTable/StatsTable.js","Components/Home/HomeTemplate.js","Components/Home/NavBarMenu.js","Components/Home/About.js","App.js","serviceWorker.js","index.js"],"names":["ModalPage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addStat","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","event","wrap","_context","prev","next","fetch","method","body","JSON","stringify","state","Data","then","res","json","console","log","catch","error","dataGrabber","toggle","stop","_x","apply","arguments","Date","Burned","Low","Medium","High","Critical","Extreme","AvgHR","PeakHR","AvgPercMaxHR","MaxHR","modal14","statData","nr","modalNumber","setState","defineProperty","_this2","react_default","createElement","mdbreact","color","onClick","isOpen","centered","style","textAlign","padding","type","defaultValue","onChange","objectSpread","target","value","name","placeholder","React","Component","EditModalPage","editStats","url","rowId","response","data","_this3","className","StatsTable","deleteStat","_ref2","_callee2","_context2","isLoaded","Fragment","Modal_ModalPage","es","columns","Header","accessor","sortable","filterable","width","maxWidth","minWidth","fitlerable","Cell","Modal_EditModalPage","defaultPageSize","br","Home","Components_StatsTable_StatsTable","NavbarMenu","bind","assertThisInitialized","Navbar","striped","light","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","Link","to","About","deck","src","alt","top","hover","overlay","App","BrowserRouter","NavBarMenu_NavbarMenu","Route","exact","path","component","HomeTemplate","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ebbbaae4.chunk.js","sourcesContent":["//Modals Control FLOW Add Stats Modal\n\nimport React from \"react\";\nimport {\n  Container,\n  Button,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  ModalFooter,\n  Row,\n  Col,\n \n} from \"mdbreact\";\n\n\n\nclass ModalPage extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    //allows for change in state to each of the fields on my modal page\n    this.state = {\n    Data : {\n        Date : \"\",\n        Burned : \"\",\n        Low : \"\",\n        Medium : \"\",\n        High : \"\",\n        Critical : \"\",\n        Extreme : \"\",\n        AvgHR : \"\",\n        PeakHR : \"\",\n        AvgPercMaxHR : \"\",\n        MaxHR : \"\"\n       },\n      \n       modal14: false\n      \n    \n    };\n   \n  }\n  \n  \n\n  onClick(event) {\n    return this.state.statData\n    }\n  \n  addStat = async (event) => {\n  \n   const url= \"http://localhost:4000/stats\"\n   await fetch (url, {\n     method: \"POST\",\n     body: JSON.stringify(this.state.Data)\n   }).then(res => res.json())\n   .then(res => console.log('success: ', JSON.stringify(res)))\n   .catch(error => console.log('Error:', error))\n  .then(()=>this.props.dataGrabber())\n  .then(() => this.toggle(14))\n }\n\n\n\n\n  \n\n\n  toggle(nr) { \n    let modalNumber = \"modal\" + nr;  \n    this.setState({\n      [modalNumber]: !this.state[modalNumber]\n    });\n  }\n\n\n\n\n  render() {\n    return (\n      <div>\n      <Container>\n        <Button color=\"green\" \n        onClick={() => this.toggle(14)}\n         >Add Stats</Button>\n        <Modal \n        isOpen={this.state.modal14} \n        toggle={() => this.toggle(14)} centered>\n          <ModalHeader toggle={() => this.toggle(14)}>Add Stats To Database</ModalHeader>\n          <ModalBody>\n\n            <form>\n            <Row>\n               <Col>\n                  Date:\n                  <div style = {{textAlign:\"left\", padding: \"0px 10px\"}}></div>\n                  <input type=\"date\" \n                  defaultValue= {this.state.Data.Date} \n                  onChange= {event=> this.setState ({Data: {...this.state.Data, Date:event.target.value}})}\n                  name= \"date\"  \n                  placeholder=\"YYYY.MM.DD\" /> \n                  <br />\n                  \n\n                  Burned:\n                  <div style = {{textAlign:\"left\", padding: \"0px 10px\"}}></div>\n                  <input type=\"number\" \n                  defaultValue= {this.state.Data.Burned}\n                  onChange= {event=>this.setState ({Data: {...this.state.Data, Burned:event.target.value}})}\n                  name=\"burned\" \n                  placeholder=\"Calories Burned?\" />\n                  <br />\n                 \n\n                  Low:\n                  <div style = {{textAlign:\"left\", padding: \"0px 10px\"}}></div>\n                  <input type=\"text\" \n                  defaultValue= {this.state.Data.Low}\n                  onChange= {event=>this.setState ({Data: {...this.state.Data, Low:event.target.value}})}\n                  name=\"low\"  \n                  placeholder=\"Grey HR Zone\" />\n                  <br />\n                 \n              \n                  Medium:\n                  <div style = {{textAlign:\"left\", padding: \"0px 10px\"}}></div>\n                  <input type=\"text\" \n                  defaultValue={this.state.Data.Medium}\n                  onChange= {event=>this.setState ({Data: {...this.state.Data, Medium:event.target.value}})}\n                  name=\"medium\" \n                  placeholder=\"Blue HR Zone\" />\n                  <br />\n             \n                  High:\n                  <div style = {{textAlign:\"left\", padding: \"0px 10px\"}}></div>\n                  <input type=\"text\" \n                  defaultValue={this.state.Data.High}\n                  onChange={event=>this.setState ({Data: {...this.state.Data, High:event.target.value}})}\n                  name=\"high\" \n                  placeholder=\"Green HR Zone\" />\n                  <br />\n              \n                  Critical:\n                  <div style = {{textAlign:\"left\", padding: \"0px 10px\"}}></div>\n                  <input type=\"text\" \n                  defaultValue= {this.state.Data.Critical}\n                  onChange= {event=>this.setState ({Data: {...this.state.Data, Critical:event.target.value}})}\n                  name=\"critical\" \n                  placeholder=\"Orange HR Zone\" />\n                  <br />\n             \n                  Extreme:\n                  <div style = {{textAlign:\"left\", padding: \"0px 10px\"}}></div>\n                  <input type=\"text\" \n                  defaultValue= {this.state.Data.Extreme}\n                  onChange={event=>this.setState ({Data: {...this.state.Data, Extreme:event.target.value}})}\n                  name=\"extreme\" \n                  placeholder=\"Red HR Zone\" />\n                  <br />\n              \n                  AvgHR:\n                  <div style = {{textAlign:\"left\", padding: \"0px 10px\"}}></div>\n                  <input type=\"text\" \n                  defaultValue={this.state.Data.AvgHR}\n                  onChange={event=>this.setState ({Data: {...this.state.Data, AvgHR:event.target.value}})}\n                  name=\"AvgHR\" \n                  placeholder=\"Average Heart Rate #\" />\n                  <br />\n              \n                  PeakHR:\n                  <div style = {{textAlign:\"left\", padding: \"0px 10px\"}}></div>\n                  <input type=\"text\" \n                  defaultValue={this.state.Data.PeakHR}\n                  onChange={event=>this.setState ({Data: {...this.state.Data, PeakHR:event.target.value}})}\n                  name=\"PeakHR\" \n                  placeholder=\"Peak Heart Rate #\" />\n                  <br />\n              \n                  AvgPercMaxHR:\n                  <div style = {{textAlign:\"left\", padding: \"0px 10px\"}}></div>\n                  <input type=\"text\" \n                  defaultValue={this.state.Data.AvgPercMaxHR}\n                  onChange={event=>this.setState ({Data:{...this.state.Data, AvgPercMaxHR:event.target.value}})}\n                  name=\"AvgPercMaxHR\" \n                  placeholder=\"Average % Max HR\" />\n                  <br />\n              \n                  MaxHR:\n                  <div style = {{textAlign:\"left\", padding: \"0px 10px\"}}></div>\n                  <input type=\"text\" \n                  defaultValue={this.state.Data.MaxHR}\n                  onChange={event=>this.setState ({Data:{...this.state.Data, MaxHR:event.target.value}})}\n                  name=\"MaxHR\" \n                  placeholder=\"Max HR #\" />\n                  <br />\n              </Col>\n              </Row>\n     \n            </form> \n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"grey\" onClick={() => this.toggle(14)} >Close</Button>\n            <Button color=\"green\" \n            onClick= {this.addStat}\n            >Add Stat\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </Container>\n      </div>\n    )}\n\n}\n\nexport default ModalPage;\n","import React from \"react\";\nimport {\n  Container,\n  Button,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  ModalFooter,\n  Row,\n  Col\n} from \"mdbreact\";\nimport './ModalCSS.css';\n\nclass EditModalPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      statData: [],\n      modal14: false\n    };\n  }\n\n  \n  //getting data and assigning it to the rowID where we only need first index item pulled of that data\n  componentDidMount() {\n    const url = \"http://localhost:4000/stats/id/\" + this.props.rowId;\n    fetch(url, \n      {method: \"GET\"})\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ statData: data[0] });\n      });\n  }\n\n  //onClick takes an event and will give us back this statData that is set above\n  onClick(event) {\n  return this.state.statData\n  }\n\n  //PUT API Call\n  editStats = async event => {\n    const url = \"http://localhost:4000/stats/id/\" + this.props.rowId;\n    fetch(url, {\n      method: \"PUT\",\n      body: JSON.stringify(this.state.statData)\n    })\n      .then(res => res.json())\n      .then(response => console.log(\"Success:\", JSON.stringify(response)))\n      .catch(error => console.error(\"Error:\", error))\n      .then (()=>this.toggle(14)).then(()=>this.props.dataGrabber()); //add stat this.toggle\n  };\n\n\n\n  //State Change For Modal\n  toggle(nr) {\n    let modalNumber = \"modal\" + nr;\n    this.setState({\n      [modalNumber]: !this.state[modalNumber]\n    });\n  }\n\n\n\n\n  //JSX React Render\n  render() {\n    // console.log(this.state.statData);\n    return (\n      <div>\n        <Container>\n          <Button className= \"editbtn\" color=\"blue\" \n          onClick={() => this.toggle(14)}>\n          Edit\n          </Button>\n          <Modal\n            isOpen={this.state.modal14}\n            toggle={() => this.toggle(14)}\n            centered>\n          <ModalHeader toggle={() => this.toggle(14)}>\n          Edit Stats in Database\n          </ModalHeader>\n          \n          {/*inline CSS Below */}\n          <ModalBody>\n              <form>\n                <Row>\n                  <Col>\n                    Date:\n                    <div style={{ textAlign: \"left\", padding: \"0px 10px\" }} />\n                    <input\n                      type=\"date\"\n                      defaultValue={this.state.statData.Date}\n                      onChange=\n                      {event => this.setState({\n                        statData: { ...this.state.statData, Date: event.target.value }\n                        })}\n                      name=\"date\"/>\n                    <br />\n\n\n                    Burned:\n                    <div style={{ textAlign: \"left\", padding: \"0px 10px\" }} />\n                    <input\n                      type=\"number\"\n                      defaultValue={this.state.statData.Burned}\n                      onChange=\n                      {event => this.setState({\n                      statData: {...this.state.statData, Burned: event.target.value }})\n                      }\n                      name=\"burned\"/>\n                    <br />\n\n\n                    Low:\n                    <div style={{ textAlign: \"left\", padding: \"0px 10px\" }} />\n                    <input\n                      type=\"text\"\n                      defaultValue={this.state.statData.Low}\n                      onChange=\n                      {event =>this.setState({\n                          statData: {...this.state.statData, Low: event.target.value }})\n                      }\n                      name=\"low\"/>\n                    <br />\n\n\n                    Medium:\n                    <div style={{ textAlign: \"left\", padding: \"0px 10px\" }} />\n                    <input\n                      type=\"text\"\n                      defaultValue={this.state.statData.Medium}\n                      onChange={event =>\n                        this.setState({\n                        statData: {...this.state.statData, Medium: event.target.value}})\n                      }\n                      name=\"medium\"/>\n                    <br />\n\n\n\n                    High:\n                    <div style={{ textAlign: \"left\", padding: \"0px 10px\" }} />\n                    <input\n                      type=\"text\"\n                      defaultValue={this.state.statData.High}\n                      onChange={event =>\n                        this.setState({\n                          statData: { ...this.state.statData, High: event.target.value }})\n                      }\n                      name=\"high\"/>\n                    <br />\n\n\n                    Critical:\n                    <div style={{ textAlign: \"left\", padding: \"0px 10px\" }} />\n                    <input\n                      type=\"text\"\n                      defaultValue={this.state.statData.Critical}\n                      onChange={event =>\n                        this.setState({\n                          statData: {...this.state.statData, Critical: event.target.value}})\n                      }\n                      name=\"critical\"/>\n                    <br />\n\n\n                    Extreme:\n                    <div style={{ textAlign: \"left\", padding: \"0px 10px\" }} />\n                    <input\n                      type=\"text\"\n                      defaultValue={this.state.statData.Extreme}\n                      onChange={event =>\n                        this.setState({\n                          statData: {...this.state.statData, Extreme: event.target.value}})\n                      }\n                      name=\"extreme\"/>\n                    <br />\n\n\n                    AvgHR:\n                    <div style={{ textAlign: \"left\", padding: \"0px 10px\" }} />\n                    <input\n                      type=\"text\"\n                      defaultValue={this.state.statData.AvgHR}\n                      onChange={event =>\n                        this.setState({\n                        statData:{...this.state.statData, AvgHR: event.target.value}\n                        })}\n                      name=\"AvgHR\"/>\n                    <br />\n\n\n                    PeakHR:\n                    <div style={{ textAlign: \"left\", padding: \"0px 10px\" }} />\n                    <input\n                      type=\"text\"\n                      defaultValue={this.state.statData.PeakHR}\n                      onChange={event =>\n                        this.setState({\n                          statData: {...this.state.statData, PeakHR: event.target.value}\n                        })}\n                      name=\"PeakHR\"/>\n                    <br />\n\n\n                    AvgPercMaxHR:\n                    <div style={{ textAlign: \"left\", padding: \"0px 10px\" }} />\n                    <input\n                      type=\"text\"\n                      defaultValue={this.state.statData.AvgPercMaxHR}\n                      onChange={event =>\n                      this.setState({\n                      statData: {...this.state.statData, AvgPercMaxHR: event.target.value}})}\n                        \n                      name=\"AvgPercMaxHR\"/>\n                    <br />\n\n\n                    MaxHR:\n                    <div style={{ textAlign: \"left\", padding: \"0px 10px\" }} />\n                    <input\n                      type=\"text\"\n                      defaultValue={this.state.statData.MaxHR}\n                      onChange={event =>\n                        this.setState({\n                          statData: {...this.state.statData, MaxHR: event.target.value}})}\n                      name=\"MaxHR\"/>\n                    <br />\n\n                  </Col>\n                </Row>\n              </form>\n            </ModalBody>\n\n            <ModalFooter>\n              <Button color=\"grey\" onClick={() => this.toggle(14)}>\n                Close\n              </Button>\n\n              <Button color=\"blue\" onClick={() => this.editStats()}>\n                Edit Stat\n              </Button>\n            </ModalFooter>\n\n          </Modal>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default EditModalPage;\n","\nimport ModalPage from \"../Modal/ModalPage\";\nimport React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport EditModalPage from \"../Modal/EditModalPage\";\n\n\nclass StatsTable extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      data: [],\n      isLoaded: true\n    };\n  }\n\n  componentDidMount() {\n    this.dataGrabber()\n    }\n\n\n\n  \n  dataGrabber  = async ( )=> {\n    const url = \"http://localhost:4000/stats\";\n    await fetch(url, {\n      method: \"GET\"\n    })\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ data: data });\n      });\n  }\n\n\n  //Delete API Call \n  deleteStat = async event => {\n    const url = \"http://localhost:4000/stats/id/\" + event.target.value;\n    await fetch(url, {\n      method: \"DELETE\"\n    }).then(res => res.json()).then(()=>this.dataGrabber());\n  };\n\n\n\n\n  //JSX Rendering of Columns && Rows, Edit Modal Button on RowID, Delete Button for target value\n  render() {\n  \n    return (\n      <React.Fragment>\n        <ModalPage dataGrabber={this.dataGrabber}/>\n        <ReactTable\n          data={this.state.data}\n          columns={[\n            {columns: [\n                {\n                  Header: \"Date\",\n                  accessor: \"Date\",\n                  sortable: true,\n                  filterable: true\n                }]\n            },\n\n            {columns: [\n                {\n                  Header: \"Calories Burned\",\n                  accessor: \"Burned\",\n                  sortable: true,\n                  filterable: true,\n                  width: 100,\n                  maxWidth: 100,\n                  minWidth: 100\n                }]\n            },\n\n            {Header: \"Ponts Earned\",\n              columns: [\n                {\n                  Header: \"Low\",\n                  accessor: \"Low\",\n                  sortable: false,\n                  filterable: false\n                },\n                {\n                  Header: \"Medium\",\n                  accessor: \"Medium\",\n                  sortable: false,\n                  filterable: false\n                },\n                {\n                  Header: \"High\",\n                  accessor: \"High\",\n                  sortable: false,\n                  filterable: false\n                },\n                {\n                  Header: \"Critical\",\n                  accessor: \"Critical\",\n                  sortable: false,\n                  filterable: false\n                },\n                {\n                  Header: \"Extreme\",\n                  accessor: \"Extreme\",\n                  sortable: false,\n                  filterable: false\n                }]\n            },\n\n            {Header: \"Heart Rate\",\n              columns: [\n                {\n                  Header: \"Average\",\n                  accessor: \"AvgHR\",\n                  sortable: false,\n                  filterable: false\n                },\n                {\n                  Header: \"Peak HeartRate\",\n                  accessor: \"PeakHR\",\n                  sortable: false,\n                  filterable: false\n                },\n                {\n                  Header: \"Avg. % Max HR\",\n                  accessor: \"AvgPercMaxHR\",\n                  sortable: false,\n                  filterable: false\n                },\n                {\n                  Header: \"MaxHR\",\n                  accessor: \"MaxHR\",\n                  sortable: false,\n                  filterable: false\n                }]\n            },\n\n            {Header: \"Actions\",\n              columns: [\n                {\n                  Header: \"Edit\",\n                  sortable: false,\n                  fitlerable: false,\n                  width: 150,\n                  maxWidth: 100,\n                  minWidth: 100,\n                  accessor: \"_id\",\n                  Cell: props => {\n                    return <EditModalPage\n                    rowId= {props.value} \n                    dataGrabber={this.dataGrabber}\n                   />\n                  }},\n\n                  \n    \n                \n                 {Header: \"Delete\",\n                  sortable: false,\n                  fitlerable: false,\n                  width: 150,\n                  maxWidth: 100,\n                  minWidth: 100,\n                  accessor: \"_id\",\n                  Cell: props => {\n                    return (\n                    <button type=\"button\" \n                      onClick={this.deleteStat}\n                      value={props.value}\n                    className=\"btn btn-danger\">Delete</button>)}\n                  }]}\n                    ]}\n                  defaultPageSize={10}\n                  className=\"-striped -highlight\"\n                  br />\n                </React.Fragment>\n    );\n  }\n}\n\nexport default StatsTable;","// /*This is my Main Layout Page*/\n//In this class, we can control these Components: NavBar StatsTable\n\n\nimport React, { Component } from \"react\";\nimport StatsTable from \"../StatsTable/StatsTable\";\n\n\nclass Home extends Component {\n  state = {\n    data: []\n  };\n\n\n  render() {\n    return (\n      <div>\n        <StatsTable/>\n      </div>\n    );\n  }\n}\nexport default Home;\n","import React from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,} from \"reactstrap\";\nimport {  Link } from \"react-router-dom\";\nimport './NavBarCSS.css';\n\nexport default class NavbarMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  \n\n  render() {\n    return (\n      <div>\n        <Navbar striped color=\"warning\" light expand=\"md\">\n          <NavbarBrand href=\"/\">Welcome Karlee Wright!</NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n               <Link to=\"/\" className=\"home\">Home</Link> \n              </NavItem>\n\n              <NavItem >\n                <Link to=\"/about\" className=\"about\">About</Link>\n              </NavItem>\n\n  \n              </Nav>\n          </Collapse>\n        </Navbar>\n      \n      </div>\n    \n    );\n  }\n\n}","import React, { Component } from 'react';\nimport { Card, CardBody, CardImage, CardText, CardGroup } from 'mdbreact';\n\n\n\nclass About extends Component {\n  render() {\n    \n    return (\n      <div className=\"cards\">\n          <h1>About My OTF Project</h1>\n             <CardText>\n               An ongoing personal project to measure my personal progress in fitness and web development.\n               <h1> Features to Implement: </h1>\n               <li>Warning for DELETE </li>\n               <li> YTD/MTD/WTD Visual dashboard of Workout Stats + Totals</li>\n               <li> Personal Records for Treadmill, Bike, and Free Weights</li>\n               <li>Implement Nutrition Tracker, InBody Measurements, Body Measurements</li>\n             </CardText>\n            <CardGroup deck>\n\n            <Card>\n        \n            <CardBody>\n            <CardImage \n            src=\"https://png.pngtree.com/element_origin_min_pic/17/03/17/5a923578a66934504d5f9a2a26185e2d.jpg \" alt=\"Card image cap\" top hover overlay=\"white-slight\"/>\n          \n  \n            \n            </CardBody>\n            </Card>\n\n\n            </CardGroup>\n            </div>\n    );\n  }\n}\n\n\n\n\n\nexport default About;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\nimport HomeTemplate from '../src/Components/Home/HomeTemplate';\nimport NavBarMenu from './Components/Home/NavBarMenu';\nimport About from './Components/Home/About';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n    <Router>\n      <div className=\"App\">\n     \n        <NavBarMenu />\n        <Route exact path=\"/\" component={HomeTemplate}/>\n        <Route path=\"/about\" component={About}/>\n       \n      </div>\n    </Router>\n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\nimport 'react-table/react-table.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}